{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lunatrek\\\\Desktop\\\\coding\\\\rutgers\\\\projects\\\\Joeys-Portfolio\\\\src\\\\components\\\\ContactForm.js\",\n  _s = $RefreshSig$();\n// imports react and usetate \nimport React, { useState } from 'react';\nimport { validateEmail } from '../utils/helpers';\n// contact form function determines behavior of form during changes, submit, and blurring\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactForm(props) {\n  _s();\n  const styles = {\n    background: {\n      backgroundColor: 'black',\n      height: 'calc(100vh - 154px)'\n    },\n    form: {\n      backgroundColor: 'lightgray',\n      padding: '1em',\n      borderRadius: '1em'\n    }\n  };\n  // usestate function for each field default state is blank\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  // usestate function for error message that appears on the screen, default blank\n  const [errorMessage, setErrorMessage] = useState('');\n  // when changes are made to different fields, changes the input value as it changes\n  const handleChange = e => {\n    // variables for the active field, field name, and value\n    const {\n      target\n    } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n    // if statement to call specific action function defined above\n    if (inputType === 'name') {\n      setName(inputValue);\n    } else if (inputType === 'email') {\n      setEmail(inputValue);\n    } else {\n      setMessage(inputValue);\n    }\n    ;\n  };\n  // function to handle blur event\n  const handleBlur = e => {\n    const {\n      target\n    } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n    // ternary operator to set error message if imput is blank\n    inputValue === '' ? setErrorMessage(`${inputType} is required!`) : setErrorMessage('');\n    // ternary operator to set error message if email is invalid\n    if (inputType === 'email') {\n      !validateEmail(email) ? setErrorMessage(`${inputType} is invalid!`) : setErrorMessage('');\n    }\n    ;\n  };\n  // function to set error message upon submission\n  const handleSubmit = e => {\n    // prevent default action of form submission\n    e.preventDefault();\n    // sets error message if any field is blank\n    if (!email || !name || !message) {\n      setErrorMessage('Email, name, and message are all required!');\n      return;\n    }\n    ;\n    // sets error message if email is invalid\n    if (!validateEmail(email)) {\n      setErrorMessage('Email is invalid');\n      return;\n    }\n    ;\n    // makes all fields blank after submission\n    setName('');\n    setEmail('');\n    setMessage('');\n  };\n  // returns form html\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.background,\n    className: \"d-flex align-items-center flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      style: styles.form,\n      className: \" m-2 form d-flex flex-column w-20\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center \",\n        children: \"Contact Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"your name\",\n        className: \"name-input rounded p-1\"\n        // calls handlechange when any changes are made to field\n        ,\n        onChange: handleChange\n        // calls handleblur when blurring away from field\n        ,\n        onBlur: handleBlur,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"my-2 p-2 fw-bold form-button rounded\",\n        onClick: handleSubmit,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-2\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text fs-4\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactForm, \"dcfzzKNom2BsoVN57jwxHJtQEUU=\");\n_c = ContactForm;\n;\n// exports contactform function\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","validateEmail","jsxDEV","_jsxDEV","ContactForm","props","_s","styles","background","backgroundColor","height","form","padding","borderRadius","name","setName","email","setEmail","message","setMessage","errorMessage","setErrorMessage","handleChange","e","target","inputType","inputValue","value","handleBlur","handleSubmit","preventDefault","style","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onBlur","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lunatrek/Desktop/coding/rutgers/projects/Joeys-Portfolio/src/components/ContactForm.js"],"sourcesContent":["// imports react and usetate \nimport React, { useState } from 'react';\nimport { validateEmail } from '../utils/helpers';\n// contact form function determines behavior of form during changes, submit, and blurring\nfunction ContactForm(props) {\n  const styles = {\n    background: {\n      backgroundColor: 'black',\n      height: 'calc(100vh - 154px)',\n    },\n    form: {\n      backgroundColor: 'lightgray',\n      padding: '1em',\n      borderRadius: '1em',\n    },\n  };\n  // usestate function for each field default state is blank\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  // usestate function for error message that appears on the screen, default blank\n  const [errorMessage, setErrorMessage] = useState('');\n  // when changes are made to different fields, changes the input value as it changes\n  const handleChange = (e) => {\n    // variables for the active field, field name, and value\n    const { target } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n    // if statement to call specific action function defined above\n    if (inputType === 'name') {\n      setName(inputValue);\n    } else if (inputType === 'email') {\n      setEmail(inputValue);\n    } else {\n      setMessage(inputValue);\n    };\n  };\n  // function to handle blur event\n  const handleBlur = (e) => {\n    const { target } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n    // ternary operator to set error message if imput is blank\n    inputValue === ''\n      ? setErrorMessage(`${inputType} is required!`)\n      : setErrorMessage('')\n    // ternary operator to set error message if email is invalid\n    if (inputType === 'email') {\n      !validateEmail(email)\n        ? setErrorMessage(`${inputType} is invalid!`)\n        : setErrorMessage('')\n    };\n  };\n  // function to set error message upon submission\n  const handleSubmit = (e) => {\n    // prevent default action of form submission\n    e.preventDefault();\n    // sets error message if any field is blank\n    if (!email || !name || !message) {\n      setErrorMessage('Email, name, and message are all required!');\n      return;\n    };\n    // sets error message if email is invalid\n    if (!validateEmail(email)) {\n      setErrorMessage('Email is invalid');\n      return;\n    };\n    // makes all fields blank after submission\n    setName('');\n    setEmail('');\n    setMessage('');\n  };\n  // returns form html\n  return (\n    <div style={styles.background} className='d-flex align-items-center flex-column'>\n      {/* calls handle submit when form is submitted */}\n      <form style={styles.form} className=\" m-2 form d-flex flex-column w-20\" onSubmit={handleSubmit}>\n        <h2 className=\"text-center \">Contact Me</h2>\n        <label>name:</label>\n        <input\n          value={name}\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"your name\"\n          className=\"name-input rounded p-1\"\n          // calls handlechange when any changes are made to field\n          onChange={handleChange}\n          // calls handleblur when blurring away from field\n          onBlur={handleBlur}\n          required\n        />\n        <label>email:</label>\n\n        <button className=\"my-2 p-2 fw-bold form-button rounded\" onClick={handleSubmit}>submit</button>\n      </form>\n      {errorMessage && (\n        <div className='px-2'>\n          <p className='error-text fs-4'>{errorMessage}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n// exports contactform function\nexport default ContactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}